ARM GAS  /tmp/cc1vDH75.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "encoder.h"
  30:Core/Src/main.c **** #include "OLED.h"
  31:Core/Src/main.c **** #include "PID.h"
  32:Core/Src/main.c **** #define GPIO_PIN_SET 1
ARM GAS  /tmp/cc1vDH75.s 			page 2


  33:Core/Src/main.c **** #define GPIO_PIN_RESET 0 
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c ****  int a=1;
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** uint16_t adc_vaule[3];
  55:Core/Src/main.c **** extern float motor1_speed;
  56:Core/Src/main.c **** extern int motor1_dir;
  57:Core/Src/main.c **** uint8_t dir_flag;
  58:Core/Src/main.c **** uint8_t flag_1;
  59:Core/Src/main.c **** uint8_t flag_2;
  60:Core/Src/main.c **** float kp=3000,ki=0.025,kd=0.1;
  61:Core/Src/main.c **** float vkp=0,vki=0;
  62:Core/Src/main.c **** extern int PWM;
  63:Core/Src/main.c **** float b;
  64:Core/Src/main.c **** /* USER CODE END PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/main.c **** void SystemClock_Config(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/cc1vDH75.s 			page 3


  90:Core/Src/main.c ****   HAL_Init();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Configure the system clock */
  97:Core/Src/main.c ****   SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize all configured peripherals */
 104:Core/Src/main.c ****   MX_GPIO_Init();
 105:Core/Src/main.c ****   MX_DMA_Init();
 106:Core/Src/main.c ****   MX_TIM1_Init();
 107:Core/Src/main.c ****   MX_TIM2_Init();
 108:Core/Src/main.c ****   MX_TIM3_Init();
 109:Core/Src/main.c ****   MX_ADC1_Init();
 110:Core/Src/main.c ****   MX_I2C1_Init();
 111:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 112:Core/Src/main.c ****   Motor_Init();
 113:Core/Src/main.c ****  b=1.6;
 114:Core/Src/main.c ****   OLED_Init(); 
 115:Core/Src/main.c ****   HAL_Delay(50);
 116:Core/Src/main.c ****   OLED_ShowString(1,1,"speed:");
 117:Core/Src/main.c ****   OLED_ShowString(2,1,"direction:");
 118:Core/Src/main.c ****   /* USER CODE END 2 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Infinite loop */
 121:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 122:Core/Src/main.c ****   while (1)
 123:Core/Src/main.c ****   { 
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     SETPWM(PWM);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   //   HAL_ADCEx_Calibration_Start(&hadc1 );
 129:Core/Src/main.c ****   //   HAL_ADC_Start_DMA(&hadc1,adc_vaule,3);
 130:Core/Src/main.c ****    
 131:Core/Src/main.c ****    
 132:Core/Src/main.c ****   // if(a==1)
 133:Core/Src/main.c ****   // {
 134:Core/Src/main.c ****   //       flag_1=HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_1);
 135:Core/Src/main.c ****   //       flag_2=HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_2);
 136:Core/Src/main.c ****         
 137:Core/Src/main.c ****   //   if(adc_vaule[0]>0 && adc_vaule[0]<10 && motor1_dir==1 && flag_1==1 && flag_2==0)
 138:Core/Src/main.c ****   //   {
 139:Core/Src/main.c ****   //     HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_1);
 140:Core/Src/main.c ****   //     HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_2);
 141:Core/Src/main.c ****   //     OLED_ShowFloatNum(1,7,motor1_speed,1,2);
 142:Core/Src/main.c ****   //         OLED_ShowNum(2,12,motor1_dir,1);
 143:Core/Src/main.c ****   //   }
 144:Core/Src/main.c ****   //   else if(adc_vaule[0]>0 && adc_vaule[0]<10 && motor1_dir==0 && flag_1==0 && flag_2==1)
 145:Core/Src/main.c ****   //   {
 146:Core/Src/main.c ****   //     HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_1);
ARM GAS  /tmp/cc1vDH75.s 			page 4


 147:Core/Src/main.c ****   //     HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_2);
 148:Core/Src/main.c ****   //     // OLED_ShowFloatNum(1,7,motor1_speed,1,2);
 149:Core/Src/main.c ****   //     //     OLED_ShowNum(2,12,motor1_dir,1);
 150:Core/Src/main.c ****   //   }
 151:Core/Src/main.c ****   
 152:Core/Src/main.c ****   //         __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,adc_vaule[2]);
 153:Core/Src/main.c ****           
 154:Core/Src/main.c ****   //     // OLED_ShowFloatNum(1,7,motor1_speed,1,2);
 155:Core/Src/main.c ****   //     //     OLED_ShowNum(2,12,motor1_dir,1);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   // }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****     // if(a==1)
 163:Core/Src/main.c ****     // { OLED_ShowFloatNum(1,7,motor1_speed,1,2);
 164:Core/Src/main.c ****     //   if(adc_vaule[2]>0 && adc_vaule[2]<5) 
 165:Core/Src/main.c ****     //    {
 166:Core/Src/main.c ****     //      __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,3500);//全速
 167:Core/Src/main.c ****     //      OLED_ShowFloatNum(1,7,motor1_speed,1,2);
 168:Core/Src/main.c ****     //      OLED_ShowNum(2,12,motor1_dir,1);
 169:Core/Src/main.c ****     //    }
 170:Core/Src/main.c ****     //   else {
 171:Core/Src/main.c ****     //       __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,adc_vaule[0]);
 172:Core/Src/main.c ****     //       OLED_ShowFloatNum(1,7,motor1_speed,1,2);
 173:Core/Src/main.c ****     //       OLED_ShowNum(2,12,motor1_dir,1);
 174:Core/Src/main.c ****     //   }
 175:Core/Src/main.c ****     // }
 176:Core/Src/main.c ****     /* USER CODE END WHILE */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c ****   /* USER CODE END 3 */
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /**
 184:Core/Src/main.c ****   * @brief System Clock Configuration
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** void SystemClock_Config(void)
 188:Core/Src/main.c **** {
 189:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 190:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 191:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 194:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 203:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/cc1vDH75.s 			page 5


 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****     Error_Handler();
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 222:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 223:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /* USER CODE END 4 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 235:Core/Src/main.c ****   * @retval None
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c **** void Error_Handler(void)
 238:Core/Src/main.c **** {
  27              		.loc 1 238 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 239:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 240:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 241:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 241 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cc1vDH75.s 			page 6


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc1vDH75.s 			page 7


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc1vDH75.s 			page 8


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 242:Core/Src/main.c ****   while (1)
  49              		.loc 1 242 3 discriminator 1 view .LVU4
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****   }
  50              		.loc 1 244 3 discriminator 1 view .LVU5
 242:Core/Src/main.c ****   while (1)
  51              		.loc 1 242 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE67:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	SystemClock_Config:
  65              	.LFB66:
 188:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  66              		.loc 1 188 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 80
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 00B5     		push	{lr}
  71              	.LCFI0:
ARM GAS  /tmp/cc1vDH75.s 			page 9


  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 95B0     		sub	sp, sp, #84
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 88
 189:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 189 3 view .LVU8
 189:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 189 22 is_stmt 0 view .LVU9
  79 0004 2822     		movs	r2, #40
  80 0006 0021     		movs	r1, #0
  81 0008 0DEB0200 		add	r0, sp, r2
  82 000c FFF7FEFF 		bl	memset
  83              	.LVL0:
 190:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  84              		.loc 1 190 3 is_stmt 1 view .LVU10
 190:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  85              		.loc 1 190 22 is_stmt 0 view .LVU11
  86 0010 0023     		movs	r3, #0
  87 0012 0593     		str	r3, [sp, #20]
  88 0014 0693     		str	r3, [sp, #24]
  89 0016 0793     		str	r3, [sp, #28]
  90 0018 0893     		str	r3, [sp, #32]
  91 001a 0993     		str	r3, [sp, #36]
 191:Core/Src/main.c **** 
  92              		.loc 1 191 3 is_stmt 1 view .LVU12
 191:Core/Src/main.c **** 
  93              		.loc 1 191 28 is_stmt 0 view .LVU13
  94 001c 0193     		str	r3, [sp, #4]
  95 001e 0293     		str	r3, [sp, #8]
  96 0020 0393     		str	r3, [sp, #12]
  97 0022 0493     		str	r3, [sp, #16]
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  98              		.loc 1 196 3 is_stmt 1 view .LVU14
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  99              		.loc 1 196 36 is_stmt 0 view .LVU15
 100 0024 0122     		movs	r2, #1
 101 0026 0A92     		str	r2, [sp, #40]
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 102              		.loc 1 197 3 is_stmt 1 view .LVU16
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 103              		.loc 1 197 30 is_stmt 0 view .LVU17
 104 0028 4FF48033 		mov	r3, #65536
 105 002c 0B93     		str	r3, [sp, #44]
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 106              		.loc 1 198 3 is_stmt 1 view .LVU18
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 107              		.loc 1 199 3 view .LVU19
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 108              		.loc 1 199 30 is_stmt 0 view .LVU20
 109 002e 0E92     		str	r2, [sp, #56]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 110              		.loc 1 200 3 is_stmt 1 view .LVU21
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 111              		.loc 1 200 34 is_stmt 0 view .LVU22
 112 0030 0222     		movs	r2, #2
 113 0032 1192     		str	r2, [sp, #68]
ARM GAS  /tmp/cc1vDH75.s 			page 10


 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 114              		.loc 1 201 3 is_stmt 1 view .LVU23
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 115              		.loc 1 201 35 is_stmt 0 view .LVU24
 116 0034 1293     		str	r3, [sp, #72]
 202:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 117              		.loc 1 202 3 is_stmt 1 view .LVU25
 202:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 118              		.loc 1 202 32 is_stmt 0 view .LVU26
 119 0036 4FF4E013 		mov	r3, #1835008
 120 003a 1393     		str	r3, [sp, #76]
 203:Core/Src/main.c ****   {
 121              		.loc 1 203 3 is_stmt 1 view .LVU27
 203:Core/Src/main.c ****   {
 122              		.loc 1 203 7 is_stmt 0 view .LVU28
 123 003c 0AA8     		add	r0, sp, #40
 124 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 125              	.LVL1:
 203:Core/Src/main.c ****   {
 126              		.loc 1 203 6 view .LVU29
 127 0042 C8B9     		cbnz	r0, .L8
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 128              		.loc 1 210 3 is_stmt 1 view .LVU30
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 129              		.loc 1 210 31 is_stmt 0 view .LVU31
 130 0044 0F23     		movs	r3, #15
 131 0046 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 132              		.loc 1 212 3 is_stmt 1 view .LVU32
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 133              		.loc 1 212 34 is_stmt 0 view .LVU33
 134 0048 0221     		movs	r1, #2
 135 004a 0691     		str	r1, [sp, #24]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 136              		.loc 1 213 3 is_stmt 1 view .LVU34
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 137              		.loc 1 213 35 is_stmt 0 view .LVU35
 138 004c 0023     		movs	r3, #0
 139 004e 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 140              		.loc 1 214 3 is_stmt 1 view .LVU36
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 141              		.loc 1 214 36 is_stmt 0 view .LVU37
 142 0050 4FF48062 		mov	r2, #1024
 143 0054 0892     		str	r2, [sp, #32]
 215:Core/Src/main.c **** 
 144              		.loc 1 215 3 is_stmt 1 view .LVU38
 215:Core/Src/main.c **** 
 145              		.loc 1 215 36 is_stmt 0 view .LVU39
 146 0056 0993     		str	r3, [sp, #36]
 217:Core/Src/main.c ****   {
 147              		.loc 1 217 3 is_stmt 1 view .LVU40
 217:Core/Src/main.c ****   {
 148              		.loc 1 217 7 is_stmt 0 view .LVU41
 149 0058 05A8     		add	r0, sp, #20
 150 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 151              	.LVL2:
ARM GAS  /tmp/cc1vDH75.s 			page 11


 217:Core/Src/main.c ****   {
 152              		.loc 1 217 6 view .LVU42
 153 005e 68B9     		cbnz	r0, .L9
 221:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 154              		.loc 1 221 3 is_stmt 1 view .LVU43
 221:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 155              		.loc 1 221 38 is_stmt 0 view .LVU44
 156 0060 0223     		movs	r3, #2
 157 0062 0193     		str	r3, [sp, #4]
 222:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 158              		.loc 1 222 3 is_stmt 1 view .LVU45
 222:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 159              		.loc 1 222 35 is_stmt 0 view .LVU46
 160 0064 4FF40043 		mov	r3, #32768
 161 0068 0393     		str	r3, [sp, #12]
 223:Core/Src/main.c ****   {
 162              		.loc 1 223 3 is_stmt 1 view .LVU47
 223:Core/Src/main.c ****   {
 163              		.loc 1 223 7 is_stmt 0 view .LVU48
 164 006a 01A8     		add	r0, sp, #4
 165 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 166              	.LVL3:
 223:Core/Src/main.c ****   {
 167              		.loc 1 223 6 view .LVU49
 168 0070 30B9     		cbnz	r0, .L10
 227:Core/Src/main.c **** 
 169              		.loc 1 227 1 view .LVU50
 170 0072 15B0     		add	sp, sp, #84
 171              	.LCFI2:
 172              		.cfi_remember_state
 173              		.cfi_def_cfa_offset 4
 174              		@ sp needed
 175 0074 5DF804FB 		ldr	pc, [sp], #4
 176              	.L8:
 177              	.LCFI3:
 178              		.cfi_restore_state
 205:Core/Src/main.c ****   }
 179              		.loc 1 205 5 is_stmt 1 view .LVU51
 180 0078 FFF7FEFF 		bl	Error_Handler
 181              	.LVL4:
 182              	.L9:
 219:Core/Src/main.c ****   }
 183              		.loc 1 219 5 view .LVU52
 184 007c FFF7FEFF 		bl	Error_Handler
 185              	.LVL5:
 186              	.L10:
 225:Core/Src/main.c ****   }
 187              		.loc 1 225 5 view .LVU53
 188 0080 FFF7FEFF 		bl	Error_Handler
 189              	.LVL6:
 190              		.cfi_endproc
 191              	.LFE66:
 193              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 194              		.align	2
 195              	.LC0:
 196 0000 73706565 		.ascii	"speed:\000"
 196      643A00
ARM GAS  /tmp/cc1vDH75.s 			page 12


 197 0007 00       		.align	2
 198              	.LC1:
 199 0008 64697265 		.ascii	"direction:\000"
 199      6374696F 
 199      6E3A00
 200              		.section	.text.main,"ax",%progbits
 201              		.align	1
 202              		.global	main
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu softvfp
 208              	main:
 209              	.LFB65:
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 210              		.loc 1 82 1 view -0
 211              		.cfi_startproc
 212              		@ Volatile: function does not return.
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 08B5     		push	{r3, lr}
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
  90:Core/Src/main.c **** 
 220              		.loc 1 90 3 view .LVU55
 221 0002 FFF7FEFF 		bl	HAL_Init
 222              	.LVL7:
  97:Core/Src/main.c **** 
 223              		.loc 1 97 3 view .LVU56
 224 0006 FFF7FEFF 		bl	SystemClock_Config
 225              	.LVL8:
 104:Core/Src/main.c ****   MX_DMA_Init();
 226              		.loc 1 104 3 view .LVU57
 227 000a FFF7FEFF 		bl	MX_GPIO_Init
 228              	.LVL9:
 105:Core/Src/main.c ****   MX_TIM1_Init();
 229              		.loc 1 105 3 view .LVU58
 230 000e FFF7FEFF 		bl	MX_DMA_Init
 231              	.LVL10:
 106:Core/Src/main.c ****   MX_TIM2_Init();
 232              		.loc 1 106 3 view .LVU59
 233 0012 FFF7FEFF 		bl	MX_TIM1_Init
 234              	.LVL11:
 107:Core/Src/main.c ****   MX_TIM3_Init();
 235              		.loc 1 107 3 view .LVU60
 236 0016 FFF7FEFF 		bl	MX_TIM2_Init
 237              	.LVL12:
 108:Core/Src/main.c ****   MX_ADC1_Init();
 238              		.loc 1 108 3 view .LVU61
 239 001a FFF7FEFF 		bl	MX_TIM3_Init
 240              	.LVL13:
 109:Core/Src/main.c ****   MX_I2C1_Init();
 241              		.loc 1 109 3 view .LVU62
 242 001e FFF7FEFF 		bl	MX_ADC1_Init
 243              	.LVL14:
ARM GAS  /tmp/cc1vDH75.s 			page 13


 110:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 244              		.loc 1 110 3 view .LVU63
 245 0022 FFF7FEFF 		bl	MX_I2C1_Init
 246              	.LVL15:
 112:Core/Src/main.c ****  b=1.6;
 247              		.loc 1 112 3 view .LVU64
 248 0026 FFF7FEFF 		bl	Motor_Init
 249              	.LVL16:
 113:Core/Src/main.c ****   OLED_Init(); 
 250              		.loc 1 113 2 view .LVU65
 113:Core/Src/main.c ****   OLED_Init(); 
 251              		.loc 1 113 3 is_stmt 0 view .LVU66
 252 002a 0B4B     		ldr	r3, .L14
 253 002c 0B4A     		ldr	r2, .L14+4
 254 002e 1A60     		str	r2, [r3]	@ float
 114:Core/Src/main.c ****   HAL_Delay(50);
 255              		.loc 1 114 3 is_stmt 1 view .LVU67
 256 0030 FFF7FEFF 		bl	OLED_Init
 257              	.LVL17:
 115:Core/Src/main.c ****   OLED_ShowString(1,1,"speed:");
 258              		.loc 1 115 3 view .LVU68
 259 0034 3220     		movs	r0, #50
 260 0036 FFF7FEFF 		bl	HAL_Delay
 261              	.LVL18:
 116:Core/Src/main.c ****   OLED_ShowString(2,1,"direction:");
 262              		.loc 1 116 3 view .LVU69
 263 003a 094A     		ldr	r2, .L14+8
 264 003c 0121     		movs	r1, #1
 265 003e 0846     		mov	r0, r1
 266 0040 FFF7FEFF 		bl	OLED_ShowString
 267              	.LVL19:
 117:Core/Src/main.c ****   /* USER CODE END 2 */
 268              		.loc 1 117 3 view .LVU70
 269 0044 074A     		ldr	r2, .L14+12
 270 0046 0121     		movs	r1, #1
 271 0048 0220     		movs	r0, #2
 272 004a FFF7FEFF 		bl	OLED_ShowString
 273              	.LVL20:
 274              	.L12:
 122:Core/Src/main.c ****   { 
 275              		.loc 1 122 3 discriminator 1 view .LVU71
 125:Core/Src/main.c **** 
 276              		.loc 1 125 5 discriminator 1 view .LVU72
 277 004e 064B     		ldr	r3, .L14+16
 278 0050 1868     		ldr	r0, [r3]
 279 0052 FFF7FEFF 		bl	SETPWM
 280              	.LVL21:
 122:Core/Src/main.c ****   { 
 281              		.loc 1 122 9 discriminator 1 view .LVU73
 282 0056 FAE7     		b	.L12
 283              	.L15:
 284              		.align	2
 285              	.L14:
 286 0058 00000000 		.word	.LANCHOR0
 287 005c CDCCCC3F 		.word	1070386381
 288 0060 00000000 		.word	.LC0
 289 0064 08000000 		.word	.LC1
ARM GAS  /tmp/cc1vDH75.s 			page 14


 290 0068 00000000 		.word	PWM
 291              		.cfi_endproc
 292              	.LFE65:
 294              		.global	b
 295              		.global	vki
 296              		.global	vkp
 297              		.global	kd
 298              		.global	ki
 299              		.global	kp
 300              		.global	flag_2
 301              		.global	flag_1
 302              		.global	dir_flag
 303              		.global	adc_vaule
 304              		.global	a
 305              		.section	.bss.adc_vaule,"aw",%nobits
 306              		.align	2
 309              	adc_vaule:
 310 0000 00000000 		.space	6
 310      0000
 311              		.section	.bss.b,"aw",%nobits
 312              		.align	2
 313              		.set	.LANCHOR0,. + 0
 316              	b:
 317 0000 00000000 		.space	4
 318              		.section	.bss.dir_flag,"aw",%nobits
 321              	dir_flag:
 322 0000 00       		.space	1
 323              		.section	.bss.flag_1,"aw",%nobits
 326              	flag_1:
 327 0000 00       		.space	1
 328              		.section	.bss.flag_2,"aw",%nobits
 331              	flag_2:
 332 0000 00       		.space	1
 333              		.section	.bss.vki,"aw",%nobits
 334              		.align	2
 337              	vki:
 338 0000 00000000 		.space	4
 339              		.section	.bss.vkp,"aw",%nobits
 340              		.align	2
 343              	vkp:
 344 0000 00000000 		.space	4
 345              		.section	.data.a,"aw"
 346              		.align	2
 349              	a:
 350 0000 01000000 		.word	1
 351              		.section	.data.kd,"aw"
 352              		.align	2
 355              	kd:
 356 0000 CDCCCC3D 		.word	1036831949
 357              		.section	.data.ki,"aw"
 358              		.align	2
 361              	ki:
 362 0000 CDCCCC3C 		.word	1020054733
 363              		.section	.data.kp,"aw"
 364              		.align	2
 367              	kp:
 368 0000 00803B45 		.word	1161527296
ARM GAS  /tmp/cc1vDH75.s 			page 15


 369              		.text
 370              	.Letext0:
 371              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 372              		.file 4 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 373              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 374              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 375              		.file 7 "Core/Inc/gpio.h"
 376              		.file 8 "Core/Inc/dma.h"
 377              		.file 9 "Core/Inc/tim.h"
 378              		.file 10 "Core/Inc/adc.h"
 379              		.file 11 "Core/Inc/i2c.h"
 380              		.file 12 "Encoder/encoder.h"
 381              		.file 13 "OLED/OLED.h"
 382              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 383              		.file 15 "<built-in>"
ARM GAS  /tmp/cc1vDH75.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc1vDH75.s:16     .text.Error_Handler:0000000000000000 $t
     /tmp/cc1vDH75.s:24     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc1vDH75.s:57     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc1vDH75.s:64     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc1vDH75.s:194    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc1vDH75.s:201    .text.main:0000000000000000 $t
     /tmp/cc1vDH75.s:208    .text.main:0000000000000000 main
     /tmp/cc1vDH75.s:286    .text.main:0000000000000058 $d
     /tmp/cc1vDH75.s:316    .bss.b:0000000000000000 b
     /tmp/cc1vDH75.s:337    .bss.vki:0000000000000000 vki
     /tmp/cc1vDH75.s:343    .bss.vkp:0000000000000000 vkp
     /tmp/cc1vDH75.s:355    .data.kd:0000000000000000 kd
     /tmp/cc1vDH75.s:361    .data.ki:0000000000000000 ki
     /tmp/cc1vDH75.s:367    .data.kp:0000000000000000 kp
     /tmp/cc1vDH75.s:331    .bss.flag_2:0000000000000000 flag_2
     /tmp/cc1vDH75.s:326    .bss.flag_1:0000000000000000 flag_1
     /tmp/cc1vDH75.s:321    .bss.dir_flag:0000000000000000 dir_flag
     /tmp/cc1vDH75.s:309    .bss.adc_vaule:0000000000000000 adc_vaule
     /tmp/cc1vDH75.s:349    .data.a:0000000000000000 a
     /tmp/cc1vDH75.s:306    .bss.adc_vaule:0000000000000000 $d
     /tmp/cc1vDH75.s:312    .bss.b:0000000000000000 $d
     /tmp/cc1vDH75.s:322    .bss.dir_flag:0000000000000000 $d
     /tmp/cc1vDH75.s:327    .bss.flag_1:0000000000000000 $d
     /tmp/cc1vDH75.s:332    .bss.flag_2:0000000000000000 $d
     /tmp/cc1vDH75.s:334    .bss.vki:0000000000000000 $d
     /tmp/cc1vDH75.s:340    .bss.vkp:0000000000000000 $d
     /tmp/cc1vDH75.s:346    .data.a:0000000000000000 $d
     /tmp/cc1vDH75.s:352    .data.kd:0000000000000000 $d
     /tmp/cc1vDH75.s:358    .data.ki:0000000000000000 $d
     /tmp/cc1vDH75.s:364    .data.kp:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_ADC1_Init
MX_I2C1_Init
Motor_Init
OLED_Init
HAL_Delay
OLED_ShowString
SETPWM
PWM
